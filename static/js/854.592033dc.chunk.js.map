{"version":3,"file":"static/js/854.592033dc.chunk.js","mappings":"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","sources":["constants.ts","pages/blogs/BlogFormModal.tsx","pages/components/MediaList.tsx","pages/components/Pagination.tsx","pages/blogs/Blogs.tsx"],"sourcesContent":["\r\nexport enum SortSelect {\r\n  'id' = 'id',\r\n  'title' = 'Title',\r\n  'content' = 'Content',\r\n  'created_at' = 'Create Date',\r\n  'updated_at' = 'Update Date',\r\n};","import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Button from 'react-bootstrap/Button';\r\nimport { Modal } from 'react-bootstrap';\r\nimport { useDispatch } from 'react-redux';\r\nimport { createBlog, updateBlog } from '../../store/actions/blogAction';\r\n\r\nlet initialForm = {\r\n  title: '',\r\n  content: '',\r\n};\r\n\r\nconst BlogFormModal = (props: Props) => {\r\n  const [blogForm, setBlogForm] = useState({ ...initialForm, image: '' });\r\n  const [isError, setIsError] = useState(initialForm);\r\n  const [imageSelected, setImageSelected] = useState('');\r\n\r\n  const { show, onHide, blogParam } = props;\r\n  const isEdit = blogParam && blogParam?.id;\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    if (isEdit && blogParam) {\r\n      const { title, content, image } = blogParam;\r\n      setBlogForm({\r\n        title,\r\n        content,\r\n        image: image?.url || '',\r\n      });\r\n      setImageSelected(image?.url || '');\r\n    }\r\n  }, [blogParam, isEdit]);\r\n\r\n  const handleFileInput = (e) => {\r\n    const file = e.target.files[0];\r\n    if (file && file?.name) {\r\n      const image = window.URL.createObjectURL(file);\r\n      setBlogForm((prev) => ({ ...prev, image: file }));\r\n      setImageSelected(image);\r\n    } else {\r\n      setImageSelected('');\r\n      setBlogForm((prev) => ({ ...prev, image: '' }));\r\n    }\r\n  };\r\n\r\n  const handleSaveChanges = (e) => {\r\n    if (formValid()) {\r\n      if (isEdit && blogParam?.id) {\r\n        dispatch(updateBlog(blogParam.id, blogForm));\r\n      } else {\r\n        dispatch(createBlog(blogForm));\r\n      }\r\n      onCloseModal();\r\n    } else {\r\n      setIsError({\r\n        title: blogForm.title.length < 1 ? 'Title is required' : '',\r\n        content: blogForm.content.length < 1 ? 'Content is required' : '',\r\n      });\r\n      console.log('Form is invalid!');\r\n    }\r\n  };\r\n\r\n  const formValid = (): boolean => {\r\n    let isValid = false;\r\n    Object.values(isError).forEach((val: any) => {\r\n      if (val.length > 0) {\r\n        isValid = false;\r\n      } else {\r\n        isValid = true;\r\n      }\r\n    });\r\n\r\n    let clone = Object.assign(\r\n      {},\r\n      { title: blogForm.title, content: blogForm.content }\r\n    );\r\n    isValid = Object.values(clone).every((val: any) => val.length > 0);\r\n\r\n    return isValid;\r\n  };\r\n\r\n  const formValChange = (e) => {\r\n    e.preventDefault();\r\n    const { name, value } = e.target;\r\n    switch (name) {\r\n      case 'title':\r\n        setIsError((prev) => ({\r\n          ...prev,\r\n          title: value.length < 1 ? 'Title is required' : '',\r\n        }));\r\n        break;\r\n      case 'content':\r\n        setIsError((prev) => ({\r\n          ...prev,\r\n          content: value.length < 1 ? 'Content is required' : '',\r\n        }));\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n    setBlogForm((prev) => ({ ...prev, [name]: value }));\r\n  };\r\n\r\n  const onCloseModal = () => {\r\n    setBlogForm({ ...initialForm, image: '' });\r\n    setIsError(initialForm);\r\n    setImageSelected('');\r\n    onHide();\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      show={show}\r\n      onHide={onCloseModal}\r\n      size=\"lg\"\r\n      aria-labelledby=\"contained-modal-title-vcenter\"\r\n      centered\r\n      animation={false}\r\n    >\r\n      <Modal.Header closeButton>\r\n        <Modal.Title id=\"contained-modal-title-vcenter\">\r\n          {(isEdit ? 'Edit' : 'Create') + ' Blog'}\r\n        </Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <form className=\"container\" noValidate>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"title\">Title</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"title\"\r\n              placeholder=\"Title\"\r\n              className={\r\n                isError.title.length > 0\r\n                  ? 'is-invalid form-control'\r\n                  : 'form-control'\r\n              }\r\n              name=\"title\"\r\n              value={blogForm.title}\r\n              onChange={formValChange}\r\n            />\r\n            {isError.title.length > 0 && (\r\n              <span className=\"invalid-feedback\">{isError.title}</span>\r\n            )}\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"content\">Content</label>\r\n            <textarea\r\n              id=\"content\"\r\n              placeholder=\"Content\"\r\n              className={\r\n                isError.content.length > 0\r\n                  ? 'is-invalid form-control'\r\n                  : 'form-control'\r\n              }\r\n              name=\"content\"\r\n              value={blogForm.content}\r\n              onChange={formValChange}\r\n            ></textarea>\r\n            {isError.content.length > 0 && (\r\n              <span className=\"invalid-feedback\">{isError.content}</span>\r\n            )}\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"image\">Image</label>\r\n            <div>\r\n              {imageSelected && imageSelected.length > 0 ? (\r\n                <img\r\n                  className=\"img-thumbnail mb-2\"\r\n                  height=\"64\"\r\n                  width=\"64\"\r\n                  style={{ objectFit: 'cover' }}\r\n                  src={imageSelected}\r\n                  alt={blogForm.image['name']}\r\n                />\r\n              ) : (\r\n                <svg\r\n                  xmlns=\"http://www.w3.org/2000/svg\"\r\n                  width=\"16\"\r\n                  height=\"16\"\r\n                  fill=\"currentColor\"\r\n                  className=\"bi bi-image\"\r\n                  viewBox=\"0 0 16 16\"\r\n                  style={{ height: '64px', width: '64px' }}\r\n                >\r\n                  <path d=\"M6.002 5.5a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0z\" />\r\n                  <path d=\"M2.002 1a2 2 0 0 0-2 2v10a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V3a2 2 0 0 0-2-2h-12zm12 1a1 1 0 0 1 1 1v6.5l-3.777-1.947a.5.5 0 0 0-.577.093l-3.71 3.71-2.66-1.772a.5.5 0 0 0-.63.062L1.002 12V3a1 1 0 0 1 1-1h12z\" />\r\n                </svg>\r\n              )}\r\n              <br />\r\n              <input type=\"file\" onChange={handleFileInput} />\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <Button variant=\"secondary\" onClick={onCloseModal}>\r\n          Close\r\n        </Button>\r\n        <Button variant=\"primary\" onClick={handleSaveChanges}>\r\n          Save Changes\r\n        </Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n};\r\n\r\ntype Props = {\r\n  show?: boolean;\r\n  onHide?: any;\r\n  blogParam?: any;\r\n};\r\n\r\nBlogFormModal.propTypes = {\r\n  show: PropTypes.bool,\r\n  onHide: PropTypes.func,\r\n  blogParam: PropTypes.object,\r\n};\r\n\r\nexport default BlogFormModal;\r\n","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport BlogFormModal from '../blogs/BlogFormModal';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useDispatch } from 'react-redux';\r\nimport { fetchBlogByIdRequest } from '../../store/actions/blogAction';\r\n\r\nconst MediaList = (props) => {\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n  const [modalShow, setModalShow] = useState(false);\r\n  const [blog, setBlog] = useState(null);\r\n\r\n  const handleItem = (item) => {\r\n    dispatch(fetchBlogByIdRequest(item.id));\r\n    navigate(`/blogs/${item.id}`);\r\n  };\r\n\r\n  const handleEdit = (item) => {\r\n    setBlog(item);\r\n    setModalShow(true);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <ul className=\"list-unstyled\">\r\n        {props?.blogs?.map((_, index) => (\r\n          <li\r\n            className={\r\n              'media justify-content-between' + (index % 2 !== 0 ? ' my-4' : '')\r\n            }\r\n            key={_.id}\r\n          >\r\n            <div className=\"d-flex w-100\" onClick={() => handleItem(_)}>\r\n              <img\r\n                src={_.image.url}\r\n                className=\"mr-3\"\r\n                alt=\"...\"\r\n                height={64}\r\n                width={64}\r\n                style={{ objectFit: 'cover' }}\r\n              />\r\n              <div className=\"media-body\">\r\n                <h5>{_.title}</h5>\r\n                {_.content}\r\n              </div>\r\n            </div>\r\n            <svg\r\n              onClick={() => handleEdit(_)}\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n              width=\"16\"\r\n              height=\"16\"\r\n              fill=\"currentColor\"\r\n              className=\"bi bi-pen\"\r\n              viewBox=\"0 0 16 16\"\r\n            >\r\n              <path d=\"m13.498.795.149-.149a1.207 1.207 0 1 1 1.707 1.708l-.149.148a1.5 1.5 0 0 1-.059 2.059L4.854 14.854a.5.5 0 0 1-.233.131l-4 1a.5.5 0 0 1-.606-.606l1-4a.5.5 0 0 1 .131-.232l9.642-9.642a.5.5 0 0 0-.642.056L6.854 4.854a.5.5 0 1 1-.708-.708L9.44.854A1.5 1.5 0 0 1 11.5.796a1.5 1.5 0 0 1 1.998-.001zm-.644.766a.5.5 0 0 0-.707 0L1.95 11.756l-.764 3.057 3.057-.764L14.44 3.854a.5.5 0 0 0 0-.708l-1.585-1.585z\" />\r\n            </svg>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n      <BlogFormModal\r\n        show={modalShow}\r\n        onHide={() => {\r\n          setModalShow(false);\r\n          setBlog(null);\r\n        }}\r\n        blogParam={blog}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nMediaList.propTypes = {\r\n  blogs: PropTypes.array,\r\n};\r\n\r\nexport default MediaList;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { fetchBlogsRequest } from '../../store/actions/blogAction';\r\nimport { RootState } from '../../store/reducers/reducers';\r\n\r\nconst Pagination = () => {\r\n  const dispatch = useDispatch();\r\n  const { pagination, search, sort_by } = useSelector(\r\n    (state: RootState) => state.blogs\r\n  );\r\n  const { next = null, page = 1, prev = null, total = 0 } = pagination;\r\n\r\n  const [pages, setPages] = useState([1]);\r\n\r\n  useEffect(() => {\r\n    if (total && total > 0) {\r\n      let pageArr = new Array<number>();\r\n      for (let i = 1; i <= total; i++) {\r\n        pageArr.push(i);\r\n      }\r\n      setPages(pageArr);\r\n    }\r\n  }, [total]);\r\n\r\n  const handlePageOnClick = (value) => {\r\n    let param = {\r\n      page: 1,\r\n      search,\r\n      sort_by,\r\n    };\r\n    if (value === 'next') {\r\n      param.page = next;\r\n    } else if (value === 'prev') {\r\n      param.page = prev;\r\n    } else {\r\n      param.page = value;\r\n    }\r\n    dispatch(fetchBlogsRequest(param));\r\n  };\r\n\r\n  const renderPagination = () => {\r\n    return pages.map((value, index) => (\r\n      <li\r\n        key={index.toString()}\r\n        className={`page-item${page === value ? ' active' : ''}`}\r\n      >\r\n        <a className=\"page-link\" onClick={() => handlePageOnClick(value)}>\r\n          {value}\r\n        </a>\r\n      </li>\r\n    ));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <nav className=\"overflow-auto mt-3\" aria-label=\"Page navigation example\">\r\n        <ul className=\"pagination pagination-sm justify-content-center\">\r\n          <li\r\n            className={`page-item ${prev && prev !== null ? '' : 'disabled'}`}\r\n          >\r\n            <a\r\n              className=\"page-link\"\r\n              tabIndex={prev && prev !== null ? 0 : -1}\r\n              aria-disabled={prev && prev !== null ? 'false' : 'true'}\r\n              onClick={() => handlePageOnClick('prev')}\r\n            >\r\n              Previous\r\n            </a>\r\n          </li>\r\n          {renderPagination()}\r\n          <li\r\n            className={`page-item ${next && next !== null ? '' : 'disabled'}`}\r\n          >\r\n            <a className=\"page-link\" onClick={() => handlePageOnClick('next')}>\r\n              Next\r\n            </a>\r\n          </li>\r\n        </ul>\r\n      </nav>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Pagination;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { SortSelect } from '../../constants';\r\nimport { fetchBlogsRequest } from '../../store/actions/blogAction';\r\nimport { RootState } from '../../store/reducers/reducers';\r\nimport MediaList from '../components/MediaList';\r\nimport Pagination from '../components/Pagination';\r\nimport { GrowSpinner } from '../components/Spinner';\r\nimport BlogFormModal from './BlogFormModal';\r\n\r\nfunction Blogs() {\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [sortValue, setSortValue] = useState('created_at');\r\n  const [modalShow, setModalShow] = useState(false);\r\n  const [screenWidth, setScreenWidth] = useState(window.innerWidth);\r\n  const dispatch = useDispatch();\r\n  const { pending, blogs, pagination } = useSelector(\r\n    (state: RootState) => state.blogs\r\n  );\r\n\r\n  useEffect(() => {\r\n    fetchBlog(searchTerm, sortValue);\r\n\r\n    const updateWindowDimensions = () => {\r\n      const { innerWidth } = window;\r\n      setScreenWidth(innerWidth);\r\n    };\r\n\r\n    window.addEventListener(\"resize\", updateWindowDimensions);\r\n\r\n    return () => window.removeEventListener(\"resize\", updateWindowDimensions)\r\n  }, [searchTerm, sortValue]);\r\n\r\n  const handleSearch = (e) => {\r\n    e.preventDefault();\r\n    fetchBlog(searchTerm, sortValue);\r\n  };\r\n\r\n  const handleSort = (e) => {\r\n    const { value } = e.target;\r\n    setSortValue(value);\r\n    // fetchBlog(searchTerm, value);\r\n  };\r\n\r\n  const fetchBlog = (search, sort_by) => {\r\n    let param = {\r\n      page: pagination?.page ? pagination.page : 1,\r\n      search,\r\n      sort_by,\r\n    };\r\n    dispatch(fetchBlogsRequest(param));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"row col-12\">\r\n        <form className=\"input-group col-md-6 col-12 my-2\" style={{ maxHeight: '38px'}} onSubmit={handleSearch}>\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            placeholder=\"Search title or content\"\r\n            value={searchTerm}\r\n            onChange={(e) => setSearchTerm(e.target.value)}\r\n          />\r\n          <div className=\"input-group-append\">\r\n            <button type=\"submit\" className=\"btn btn-outline-secondary\">\r\n              <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" className=\"bi bi-search\" viewBox=\"0 0 16 16\">\r\n                <path d=\"M11.742 10.344a6.5 6.5 0 1 0-1.397 1.398h-.001c.03.04.062.078.098.115l3.85 3.85a1 1 0 0 0 1.415-1.414l-3.85-3.85a1.007 1.007 0 0 0-.115-.1zM12 6.5a5.5 5.5 0 1 1-11 0 5.5 5.5 0 0 1 11 0z\" />\r\n              </svg>\r\n            </button>\r\n          </div>\r\n        </form>\r\n\r\n        <div className=\"d-flex align-items-center col-md-4 col-12\">\r\n          <span className=\"text-nowrap mr-2\">Sort by: </span>\r\n          <select\r\n            className=\"form-control\"\r\n            value={sortValue}\r\n            onChange={handleSort}\r\n          >\r\n            {Object.entries(SortSelect).map(([key, value], i) => (\r\n              <option key={key} value={key}>\r\n                {value}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n\r\n        <button\r\n          className=\"btn btn-primary btn-add my-2\"\r\n          type=\"button\"\r\n          onClick={() => setModalShow(true)}\r\n        >\r\n          {screenWidth <= 767 ? (\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" fill=\"white\" className=\"bi bi-plus\" viewBox=\"0 0 16 16\">\r\n              <path d=\"M8 4a.5.5 0 0 1 .5.5v3h3a.5.5 0 0 1 0 1h-3v3a.5.5 0 0 1-1 0v-3h-3a.5.5 0 0 1 0-1h3v-3A.5.5 0 0 1 8 4z\" />\r\n            </svg>\r\n          ) : 'Create Blog'}\r\n        </button>\r\n        <BlogFormModal\r\n          show={modalShow}\r\n          onHide={() => setModalShow(false)}\r\n          blogParam={undefined}\r\n        />\r\n      </div>\r\n      <div className=\"media-list my-3\">\r\n        {pending ? <GrowSpinner /> : <MediaList blogs={blogs} />}\r\n      </div>\r\n      {!pending && <Pagination />}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Blogs;\r\n"],"names":["SortSelect","initialForm","title","content","props","useState","image","blogForm","setBlogForm","isError","setIsError","imageSelected","setImageSelected","show","onHide","blogParam","isEdit","id","dispatch","useDispatch","useEffect","url","formValid","Object","values","forEach","val","length","clone","assign","every","formValChange","e","preventDefault","target","name","value","prev","onCloseModal","Modal","size","centered","animation","closeButton","className","noValidate","htmlFor","type","placeholder","onChange","height","width","style","objectFit","src","alt","xmlns","fill","viewBox","d","file","files","window","URL","createObjectURL","Button","variant","onClick","updateBlog","createBlog","console","log","navigate","useNavigate","modalShow","setModalShow","blog","setBlog","blogs","map","_","index","item","fetchBlogByIdRequest","useSelector","state","pagination","search","sort_by","next","page","total","pages","setPages","pageArr","Array","i","push","handlePageOnClick","param","fetchBlogsRequest","tabIndex","toString","searchTerm","setSearchTerm","sortValue","setSortValue","innerWidth","screenWidth","setScreenWidth","pending","fetchBlog","updateWindowDimensions","addEventListener","removeEventListener","maxHeight","onSubmit","entries","key","undefined"],"sourceRoot":""}